///////////////////////////////////////
//
//	Computer Graphics TSBK03
//	Conrad Wahlén - conwa099
//
///////////////////////////////////////

#version 430

layout(local_size_x = 64) in;

struct Particle {
	vec3 position;
	uint bin;
	vec3 velocity;
	uint ID;
};

layout (std430, binding = 0) readonly buffer ParticleBuffer1
{
    Particle particlesIn[];  
};

layout (std430, binding = 1) writeonly buffer ParticleBuffer2
{
    Particle particlesOut[];  
};

layout (std430, binding = 3) buffer BinCounterBuffer {
	uint binCounter[];
};

layout (std430, binding = 4) readonly buffer PrefixSumBuffer {
	uint prefixSum[];
};

void main() {
    uint currentParticle = gl_GlobalInvocationID.x;
	uint bin = particlesIn[currentParticle].bin;
	uint count = atomicAdd(binCounter[bin], 1);
	uint outIndex = prefixSum[bin] + count;

	particlesOut[outIndex].position = particlesIn[currentParticle].position;
	particlesOut[outIndex].bin = bin;
	particlesOut[outIndex].velocity = particlesIn[currentParticle].velocity;
	particlesOut[outIndex].ID = particlesIn[currentParticle].ID;
}