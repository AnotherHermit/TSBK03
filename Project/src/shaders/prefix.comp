///////////////////////////////////////
//
//	Computer Graphics TSBK03
//	Conrad Wahlén - conwa099
//
///////////////////////////////////////

#version 430

layout(local_size_x = 64) in;

struct Bin {
	uint bins;
	uint totalBins;
	float binSize;
	float areaSize;
};

layout (std430, binding = 3) buffer BinCounterBuffer {
	uint binCounter[];
};

layout (std430, binding = 4) buffer PrefixCounterBuffer {
	uint prefixCounter[];
};

layout (std140, binding = 11) uniform BinBuffer {
	Bin binInfo;
};

shared uint sData[gl_WorkGroupSize.x];
														
void main(void) {
	uint ltid = gl_LocalInvocationIndex.x;
	uint gtid = gl_GlobalInvocationID.x;
	
	sData[ltid] = binCounter[gtid];

	barrier();

	for(uint s = 1; s < gl_WorkGroupSize.x; s *= 2) {
		uint ind	= 2 * s * ltid;
		uint d		= 2 * s - 1 + ind;
		uint k		= s - 1 + ind;

		if (ind < gl_WorkGroupSize.x) {
			sData[d] += sData[k];	
		}
		barrier();
	}

	if (ltid == 0) sData[gl_WorkGroupSize.x - 1] = 0;
	barrier();

	for(uint s = gl_WorkGroupSize.x / 2; s > 0; s /= 2) {
		uint ind	= 2 * s * ltid;
		uint d		= 2 * s - 1 + ind;
		uint k		= s - 1 + ind;

		if (ind < gl_WorkGroupSize.x) {
			uint temp = sData[k];
			sData[k] = sData[d];
			sData[d] += temp;	
		}
		barrier();
	}

	prefixCounter[ltid] = sData[ltid];
}

