#version 430

layout(local_size_x = 64) in;

struct Particle {
	vec3 position;
	uint bin;
	vec3 velocity;
	uint padding;
};

layout (std140, binding = 1) buffer ParticleBuffer
{
    Particle data[];  
} particles;

uniform float deltaT;

void main() {
   
    uint currentParticle = gl_GlobalInvocationID.x;

    vec3 pos = particles.data[currentParticle].position;
    vec3 vel = particles.data[currentParticle].velocity;

    // Position update
	particles.data[currentParticle].position = pos + vel * deltaT;

    // Velocity update
	particles.data[currentParticle].velocity = 0.0001 * vec3(-pos.z, 0, pos.x);
}